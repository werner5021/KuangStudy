<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
    	http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DataSource: 使用 Spring的數據元替換Mybatis的配置 c3p0 dbcp drwid 這裡使用Spring提供的JDBC: 
		org.springframework.jdbc.datasource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DiverManager">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/mybatis?useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="12345678" />
	</bean>

	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 綁定 Mybatis 配置文件 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<property name="mapperLocations"
			value="calsspath:com/werner/mapper/*.xml" />
	</bean>

	<!-- SqlSessionTemplate: 就是我們使用的sqlSession -->
	<bean id="sqlSession"
		class="org.mybatis.spring.sqlSessionTemplate">
		<!-- 只能使用構造器注入sqlSessionFactory，因為它沒有set方法 -->
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 配置聲明式事務 -->
	<!-- 獲得transactionManager，丟給構造器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource" />
		<!-- 也能這樣寫 <property name="dataSource" ref="dataSource"></property> -->
	</bean>

	<!-- 結合AOP時現事務的織入 -->
	<!-- 配置事務通知(Spring來做) -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 給哪些方法配置事務 -->
		<!-- 配置事務的傳播特性 propagation-->
		<tx:attributes>
			<tx:method name="add" propagation="REQUIRED"/>
			<tx:method name="delete" propagation="REQUIRED"/>
			<tx:method name="update" propagation="REQUIRED"/>
			<tx:method name="query" read-only="true"/>  <!-- 查不用更改事務，設定唯讀 -->
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置事務切入 -->
	<aop:config>
		<aop:pointcut id="txPointCut" expression="execution(* com.werner.mapper.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice"/>
	</aop:config>
	
	
	

</beans>

